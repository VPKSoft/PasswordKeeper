name: Lint & Test deployment package
on:
  push:
    paths-ignore:
      - '**.md'
  workflow_dispatch:
  
jobs:
  release:
    environment: Release
    env: 
      TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
      TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}  
      WIN_CERT01: ${{ secrets.WIN_CERT01 }}
      WIN_CERT02: ${{ secrets.WIN_CERT02 }}
      WIN_CERT03: ${{ secrets.WIN_CERT03 }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-24.04, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Windows certificates
        if: matrix.platform == 'windows-latest'
        run: |
          MkDir C:\signing
          Invoke-WebRequest https://github.com/VPKSoftOrg/FileToVariables/releases/latest/download/FileToVariables-x86_64-pc-windows-gnu.zip -OutFile C:\signing\win_exe.zip
          Expand-Archive C:\signing\win_exe.zip C:\signing
          C:\signing\FileToVariables.exe --file C:\signing\windows.cer --var-format "WIN_CERT{i}" read
          $params = @{
            CertFilePath = 'C:\signing\windows.cer'
            CertStoreLocation = 'Cert:\CurrentUser\My'
          }
          Import-Certificate $params        
      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-24.04'
        # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev build-essential libwebkit2gtk-4.1-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm' # Set this to npm, yarn or pnpm.

      - name: Install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: npm install # Change this to npm, yarn or pnpm.
        
      - name: Lint
        run:  npm run lint
        
      - name: Test deploy
        run: npm run tauri build
