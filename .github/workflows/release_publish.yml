name: 'Release publish'
on:
  push:
    branches:
      - 'release/**'
  
  workflow_dispatch:

jobs:
  publish-tauri:
    environment: Release
    env: 
      TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
      TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
      WINDOWS_CERT_THUMBPRINT: ${{ secrets.WINDOWS_CERT_THUMBPRINT }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-24.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: Install Windows certificates
        if: matrix.platform == 'windows-latest'
        run: |
          MkDir C:\signing
          Invoke-WebRequest https://github.com/VPKSoftOrg/FileToVariables/releases/latest/download/FileToVariables-x86_64-pc-windows-gnu.zip -OutFile C:\signing\win_exe.zip
          Expand-Archive C:\signing\win_exe.zip C:\signing
          C:\signing\FileToVariables.exe --file C:\signing\windows.cer --var-format "WIN_CERT{i}" read
          $params = @{
            CertFilePath = 'C:\signing\windows.cer'
            CertStoreLocation = 'Cert:\CurrentUser\My'
          }
          Import-Certificate @params
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-24.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev build-essential libwebkit2gtk-4.1-dev libayatana-appindicator3-dev librsvg2-dev
      - name: init install folder (Windows)
#        run: npm install # change this to npm or pnpm depending on which one you use
        if: matrix.platform == 'windows-latest'
        run: ${{ github.workspace }}\init.ps1
      - name: init install folder (Linux & Mac)
#        run: npm install # change this to npm or pnpm depending on which one you use
        if: matrix.platform == 'ubuntu-24.04' || matrix.platform == 'macos-latest'
        run: ${{ github.workspace }}/init.sh          
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: 'PasswordKeeper v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: false
          prerelease: false
